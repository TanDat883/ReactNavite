import { Text, StyleSheet, View, TouchableOpacity, FlatList, Image, ScrollView, ActivityIndicator } from 'react-native';
import React, { useEffect, useState } from 'react';
import { MaterialIcons } from '@expo/vector-icons';
import { useDispatch, useSelector } from 'react-redux';
import { fetchBikes, selectBikes, selectLoading, selectError } from '../bikeSlice';

const getImage = (imagePath) => {
  switch (imagePath) {
    case 'xe5.png':
      return require('../assets/xe5.png');
    case 'xe2.png':
      return require('../assets/xe2.png');
    case 'xe3.png':
      return require('../assets/xe3.png');
    case 'xe4.png':
      return require('../assets/xe4.png');
    default:
      return require('../assets/xe4.png');
  }
};

const Item = ({ item, navigation }) => (
  <TouchableOpacity style={styles.bikeCart} onPress={() => navigation.navigate('Screen3', { item })}>
    <MaterialIcons
      name="favorite"
      size={24}
      color={item.heart ? 'red' : 'gray'}
      style={styles.heartIcon}
    />
    <Image style={styles.image} source={getImage(item.image)} />
    <Text>{item.name}</Text>
    <Text>{item.price}</Text>
  </TouchableOpacity>
);

const Screen2 = ({ navigation }) => {
  const dispatch = useDispatch();
  const bikes = useSelector(selectBikes);
  const loading = useSelector(selectLoading);
  const error = useSelector(selectError);
  const categories = ['All', 'Roadbike', 'Mountain'];
  const [selectedCategory, setSelectedCategory] = useState('All');

  useEffect(() => {
    dispatch(fetchBikes());
  }, [dispatch]);

  if (loading) return <ActivityIndicator size="large" color="blue" />;
  if (error) return <Text>Error fetching data...</Text>;

  const filteredBikes = bikes.filter(bike => selectedCategory === 'All' ? true : bike.type === selectedCategory);

  return (
    <ScrollView>
      <View style={styles.container}>
        <Text style={styles.header}>The worldâ€™s Best Bike</Text>
        <View style={styles.containerBtn}>
          {categories.map((category) => (
            <TouchableOpacity key={category} style={styles.btn} onPress={() => setSelectedCategory(category)}>
              <Text style={[styles.btnText, selectedCategory === category && styles.activeBtn]}>{category}</Text>
            </TouchableOpacity>
          ))}
        </View>
        <FlatList
          data={filteredBikes}
          keyExtractor={item => item.id}
          renderItem={({ item }) => <Item item={item} navigation={navigation} />}
          numColumns={2}
          columnWrapperStyle={{ gap: 5 }}
        />
      </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 10,
  },
  header: {
    color: '#E94141',
    fontSize: 20,
    marginTop: 20,
    fontWeight: 'bold',
    marginLeft: 15,
  },
  containerBtn: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    marginTop: 15,
    marginBottom: 30,
  },
  btn: {
    width: 80,
    height: 25,
    borderColor: 'red',
    borderWidth: 1,
    borderRadius: 5,
  },
  btnText: {
    textAlign: 'center',
    color: '#BEB6B6',
    fontSize: 15,
  },
  activeBtn: {
    color: 'red',
  },
  bikeCart: {
    flex: 1,
    margin: 10,
    backgroundColor: '#F7BA8326',
    borderRadius: 15,
    padding: 10,
    alignItems: 'center',
  },
  image: {
    width: 120,
    height: 150,
    resizeMode: 'contain',
  },
  heartIcon: {
    position: 'absolute',
    top: 10,
    left: 10,
  },
});

export default Screen2;