import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';
import { useDispatch } from 'react-redux';
import { fetchBikes } from '../bikeSlice'; // Import action để lấy dữ liệu sau khi thêm
import { useNavigation } from '@react-navigation/native'; // Nhập useNavigation

const AdminScreen = () => {
  const dispatch = useDispatch();
  const navigation = useNavigation(); // Khai báo navigation
  const [name, setName] = useState('');
  const [price, setPrice] = useState('');
  const [type, setType] = useState('');
  const [image, setImage] = useState('');
  const [originalPrice, setOriginalPrice] = useState('');

  const handleAddBike = async () => {
    if (!name || !price || !type || !image || !originalPrice) {
      Alert.alert('Error', 'Please fill in all fields');
      return;
    }

    const newBike = {
      name,
      price: parseFloat(price),
      type,
      image,
      originalPrice: parseFloat(originalPrice),
    };

    try {
      const response = await fetch('https://6459ebf065bd868e930ba426.mockapi.io/bikes', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(newBike),
      });

      if (response.ok) {
        Alert.alert('Success', 'Bike added successfully');
        dispatch(fetchBikes()); // Cập nhật danh sách xe sau khi thêm
        // Reset fields
        setName('');
        setPrice('');
        setType('');
        setImage('');
        setOriginalPrice('');
        
        // Điều hướng đến Screen2
        navigation.navigate('Screen2');
      } else {
        throw new Error('Failed to add bike');
      }
    } catch (error) {
      Alert.alert('Error', error.message);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Add New Bike</Text>
      <TextInput
        style={styles.input}
        placeholder="Bike Name"
        value={name}
        onChangeText={setName}
      />
      <TextInput
        style={styles.input}
        placeholder="Price"
        value={price}
        keyboardType="numeric"
        onChangeText={setPrice}
      />
      <TextInput
        style={styles.input}
        placeholder="Type"
        value={type}
        onChangeText={setType}
      />
      <TextInput
        style={styles.input}
        placeholder="Image URL"
        value={image}
        onChangeText={setImage}
      />
      <TextInput
        style={styles.input}
        placeholder="Original Price"
        value={originalPrice}
        keyboardType="numeric"
        onChangeText={setOriginalPrice}
      />
      <Button title="Add Bike" onPress={handleAddBike} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#fff',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 15,
    paddingHorizontal: 10,
  },
});

export default AdminScreen;